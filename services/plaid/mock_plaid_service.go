// Code generated by mockery v2.16.0. DO NOT EDIT.

package plaid

import (
	context "context"

	v10plaid "github.com/plaid/plaid-go/v10/plaid"
	mock "github.com/stretchr/testify/mock"
)

// MockPlaidService is an autogenerated mock type for the PlaidService type
type MockPlaidService struct {
	mock.Mock
}

// PublicTokenExchange provides a mock function with given fields: ctx, publicToken
func (_m *MockPlaidService) PublicTokenExchange(ctx context.Context, publicToken string) (*v10plaid.ItemPublicTokenExchangeResponse, error) {
	ret := _m.Called(ctx, publicToken)

	var r0 *v10plaid.ItemPublicTokenExchangeResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) *v10plaid.ItemPublicTokenExchangeResponse); ok {
		r0 = rf(ctx, publicToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v10plaid.ItemPublicTokenExchangeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, publicToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockPlaidService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPlaidService creates a new instance of MockPlaidService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPlaidService(t mockConstructorTestingTNewMockPlaidService) *MockPlaidService {
	mock := &MockPlaidService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
