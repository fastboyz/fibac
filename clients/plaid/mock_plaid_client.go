// Code generated by mockery v2.16.0. DO NOT EDIT.

package plaid

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	v10plaid "github.com/plaid/plaid-go/v10/plaid"
)

// MockPlaidClient is an autogenerated mock type for the PlaidClient type
type MockPlaidClient struct {
	mock.Mock
}

// ItemPublicTokenExchangeRequest provides a mock function with given fields: ctx, publicToken
func (_m *MockPlaidClient) ItemPublicTokenExchangeRequest(ctx context.Context, publicToken string) (v10plaid.ItemPublicTokenExchangeResponse, *http.Response, error) {
	ret := _m.Called(ctx, publicToken)

	var r0 v10plaid.ItemPublicTokenExchangeResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) v10plaid.ItemPublicTokenExchangeResponse); ok {
		r0 = rf(ctx, publicToken)
	} else {
		r0 = ret.Get(0).(v10plaid.ItemPublicTokenExchangeResponse)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, string) *http.Response); ok {
		r1 = rf(ctx, publicToken)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string) error); ok {
		r2 = rf(ctx, publicToken)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewMockPlaidClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPlaidClient creates a new instance of MockPlaidClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPlaidClient(t mockConstructorTestingTNewMockPlaidClient) *MockPlaidClient {
	mock := &MockPlaidClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
